{
    "encodedAci":{
       "contract":{
          "functions":[
             {
                "arguments":[
                   {
                      "name":"_1",
                      "type":"int"
                   },
                   {
                      "name":"_2",
                      "type":"address"
                   },
                   {
                      "name":"_3",
                      "type":"int"
                   },
                   {
                      "name":"_4",
                      "type":{
                         "list":[
                            "string"
                         ]
                      }
                   },
                   {
                      "name":"_5",
                      "type":{
                         "bytes":65
                      }
                   }
                ],
                "name":"migrate",
                "payable":false,
                "returns":"int",
                "stateful":true
             },
             {
                "arguments":[
                   {
                      "name":"_1",
                      "type":"string"
                   },
                   {
                      "name":"_2",
                      "type":"int"
                   },
                   {
                      "name":"_3",
                      "type":"int"
                   },
                   {
                      "name":"_4",
                      "type":{
                         "list":[
                            "string"
                         ]
                      }
                   }
                ],
                "name":"contained_in_merkle_tree",
                "payable":false,
                "returns":"bool",
                "stateful":false
             },
             {
                "arguments":[
                   
                ],
                "name":"balance",
                "payable":false,
                "returns":"int",
                "stateful":false
             },
             {
                "arguments":[
                   
                ],
                "name":"root_hash",
                "payable":false,
                "returns":"string",
                "stateful":false
             },
             {
                "arguments":[
                   
                ],
                "name":"migrations_count",
                "payable":false,
                "returns":"int",
                "stateful":false
             },
             {
                "arguments":[
                   {
                      "name":"_1",
                      "type":"string"
                   }
                ],
                "name":"is_migrated",
                "payable":false,
                "returns":"bool",
                "stateful":false
             }
          ],
          "kind":"contract_main",
          "name":"TokenMigration",
          "payable":false,
          "type_defs":[
             
          ]
       }
    },
    "externalEncodedAci":[
       
    ],
    "interface":"main contract TokenMigration =\n  stateful entrypoint migrate : (int, address, int, list(string), bytes(65)) => int\n  entrypoint contained_in_merkle_tree : (string, int, int, list(string)) => bool\n  entrypoint balance : () => int\n  entrypoint root_hash : () => string\n  entrypoint migrations_count : () => int\n  entrypoint is_migrated : (string) => bool\n"
 }